==================
Simple state variable
==================

contract C {
  uint256 myVar;
}
---

(source_file
  definition: (contract
    name: (identifier)
    storage: (storage
      type: (user_defined_type
        name: (symbol
          name: (identifier)))
      name: (identifier))))

==================
Public constant state variable with initializer
==================

contract C {
  string public constant GREETING = "Hello";
}
---

(source_file
  definition: (contract
    name: (identifier)
    storage: (storage
      type: (string_type)
      visibility: (visibility)
      mutability: (mutability)
      name: (identifier)
      value: (literal
        (string)))))

==================
Immutable state variable
==================

contract C {
  address public immutable owner;
}
---

(source_file
  definition: (contract
    name: (identifier)
    storage: (storage
      type: (address_type)
      visibility: (visibility)
      mutability: (mutability)
      name: (identifier))))

==================
Overriding state variable
==================

interface I {
  function name() external view returns (string memory);
}
contract C is I {
  string public override name = "MyContract";
}
---

(source_file
  definition: (interface
    name: (identifier)
    function: (function
      name: (identifier)
      visibility: (visibility)
      mutability: (state_mutability)
      returns: (parameter_list
        parameter: (parameter
          type: (string_type)
          location: (data_location)))))
  definition: (contract
    name: (identifier)
    parents: (parent_list
      parent: (parent
        name: (identifier)))
    storage: (storage
      type: (string_type)
      visibility: (visibility)
      override: (override_specifier)
      name: (identifier)
      value: (literal
        (string)))))
