==================
Simple state variable
==================

contract C {
  uint256 myVar;
}
---

(source_file
  (contract_definition
    name: (identifier)
    body: (contract_body
      state_variable: (state_variable_declaration
        type: (uint_type)
        name: (identifier)))))

==================
Public constant state variable with initializer
==================

contract C {
  string public constant GREETING = "Hello";
}
---

(source_file
  (contract_definition
    name: (identifier)
    body: (contract_body
      state_variable: (state_variable_declaration
        type: (string_type)
        visibility: (visibility)
        mutability: (mutability)
        name: (identifier)
        value: (primary_expression
          (literal
            (string_literal)))))))

==================
Immutable state variable
==================

contract C {
  address public immutable owner;
}
---

(source_file
  (contract_definition
    name: (identifier)
    body: (contract_body
      state_variable: (state_variable_declaration
        type: (address_type)
        visibility: (visibility)
        mutability: (mutability)
        name: (identifier)))))

==================
Overriding state variable
==================

interface I {
  function name() external view returns (string memory);
}
contract C is I {
  string public override name = "MyContract";
}
---

(source_file
  (interface_definition
    name: (identifier)
    body: (interface_body
      function: (function_definition
        name: (identifier)
        visibility: (visibility)
        mutability: (state_mutability)
        returns: (parameter_list
          (parameter_declaration
            type: (string_type)
            location: (data_location))))))
  (contract_definition
    name: (identifier)
    parents: (parent_list
      (base_contract
        name: (identifier_path
          (identifier))))
    body: (contract_body
      state_variable: (state_variable_declaration
        type: (string_type)
        visibility: (visibility)
        override: (override_specifier)
        name: (identifier)
        value: (primary_expression
          (literal
            (string_literal)))))))
