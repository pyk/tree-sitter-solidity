==================
State variable of type address
==================

contract C {
  address owner;
}

---

(source_file
  definition: (contract
    name: (identifier)
    storage: (storage
      type: (address_type)
      name: (identifier))))

==================
State variable of type address payable
==================

contract C {
  address payable recipient;
}

---

(source_file
  definition: (contract
    name: (identifier)
    storage: (storage
      type: (address_type)
      name: (identifier))))

==================
Address types as function parameters
==================

contract C {
  function sendTo(address from, address payable to) public {}
}

---

(source_file
  definition: (contract
    name: (identifier)
    function: (function
      name: (identifier)
      parameters: (parameter_list
        parameter: (parameter
          type: (address_type)
          name: (identifier))
        parameter: (parameter
          type: (address_type)
          name: (identifier)))
      visibility: (visibility)
      body: (block))))

==================
Address payable as a return value
==================

contract C {
  function getRecipient() public returns (address payable) {
    // ...
  }
}

---

(source_file
  definition: (contract
    name: (identifier)
    function: (function
      name: (identifier)
      visibility: (visibility)
      returns: (parameter_list
        parameter: (parameter
          type: (address_type)))
      body: (block
        (comment)))))

==================
Address type as a local variable
==================

contract C {
  function check() public {
    address localAddress = msg.sender;
  }
}

---

(source_file
  definition: (contract
    name: (identifier)
    function: (function
      name: (identifier)
      visibility: (visibility)
      body: (block
        (variable_declaration_statement
          declaration: (variable_declaration
            type: (address_type)
            name: (identifier))
          value: (member_access_expression
            object: (primary_expression
              (identifier))
            member: (identifier)))))))

==================
Payable conversion expression
==================

contract C {
  function f(address someAddress) public {
    address payable p = payable(someAddress);
  }
}

---

(source_file
  definition: (contract
    name: (identifier)
    function: (function
      name: (identifier)
      parameters: (parameter_list
        parameter: (parameter
          type: (address_type)
          name: (identifier)))
      visibility: (visibility)
      body: (block
        (variable_declaration_statement
          declaration: (variable_declaration
            type: (address_type)
            name: (identifier))
          value: (payable_conversion_expression
            arguments: (argument_list
              argument: (primary_expression
                (identifier)))))))))

==================
Payable conversion with member access
==================

contract C {
  function f() public payable {
    payable(msg.sender).transfer(1 ether);
  }
}

---

(source_file
  definition: (contract
    name: (identifier)
    function: (function
      name: (identifier)
      visibility: (visibility)
      mutability: (state_mutability)
      body: (block
        (expression_statement
          (call_expression
            function: (member_access_expression
              object: (payable_conversion_expression
                arguments: (argument_list
                  argument: (member_access_expression
                    object: (primary_expression
                      (identifier))
                    member: (identifier))))
              member: (identifier))
            arguments: (argument_list
              argument: (primary_expression
                (literal_with_subdenomination
                  (number)
                  (subdenomination))))))))))
