==================
Simple free function
==================

function helper() {}

---

(source_file
  definition: (function
    name: (identifier)
    body: (block)))

==================
Free function with parameters and returns
==================

function add(uint x, uint y) pure returns (uint) {
  return x + y;
}

---

(source_file
  definition: (function
    name: (identifier)
    parameters: (parameter_list
      parameter: (parameter
        type: (uint_type)
        name: (identifier))
      parameter: (parameter
        type: (uint_type)
        name: (identifier)))
    mutability: (state_mutability)
    returns: (parameter_list
      parameter: (parameter
        type: (uint_type)))
    body: (block
      (return_statement
        value: (arithmetic
          (add_expression
            left: (primary_expression
              (identifier))
            operator: (add_op)
            right: (primary_expression
              (identifier))))))))

==================
Internal free function (explicit)
==================

function mul(uint x, uint y) internal pure returns (uint) {
  return x * y;
}

---

(source_file
  definition: (function
    name: (identifier)
    parameters: (parameter_list
      parameter: (parameter
        type: (uint_type)
        name: (identifier))
      parameter: (parameter
        type: (uint_type)
        name: (identifier)))
    visibility: (visibility)
    mutability: (state_mutability)
    returns: (parameter_list
      parameter: (parameter
        type: (uint_type)))
    body: (block
      (return_statement
        value: (arithmetic
          (mul_expression
            left: (primary_expression
              (identifier))
            operator: (mul_op)
            right: (primary_expression
              (identifier))))))))

==================
Virtual function
==================

function myFunction() public virtual {}

---

(source_file
  definition: (function
    name: (identifier)
    visibility: (visibility)
    virtual: (virtual)
    body: (block)))

==================
Function with simple override
==================

function myFunction() public override {}

---

(source_file
  definition: (function
    name: (identifier)
    visibility: (visibility)
    override: (override_specifier)
    body: (block)))

==================
Function with override and single base
==================

function myFunction() public override(Base) {}

---

(source_file
  definition: (function
    name: (identifier)
    visibility: (visibility)
    override: (override_specifier
      from: (identifier_path
        (identifier)))
    body: (block)))

==================
Function with override and multiple bases
==================

function myFunction() public override(Base1, Base2) {}

---

(source_file
  definition: (function
    name: (identifier)
    visibility: (visibility)
    override: (override_specifier
      from: (identifier_path
        (identifier))
      from: (identifier_path
        (identifier)))
    body: (block)))

==================
Virtual and override function
==================

function myFunction() public virtual override {}

---

(source_file
  definition: (function
    name: (identifier)
    visibility: (visibility)
    virtual: (virtual)
    override: (override_specifier)
    body: (block)))

==================
Function with modifiers
==================

function myFunction() public onlyOwner returns (bool) {}

---

(source_file
  definition: (function
    name: (identifier)
    visibility: (visibility)
    modifier: (modifier_invocation
      name: (identifier_path
        (identifier)))
    returns: (parameter_list
      parameter: (parameter
        type: (bool_type)))
    body: (block)))
