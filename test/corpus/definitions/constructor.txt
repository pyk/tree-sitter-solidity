==================
Simple constructor with no parameters
==================

contract C {
  constructor() {}
}

---

(source_file
  definition: (contract
    name: (identifier)
    constructor: (constructor
      body: (block))))

==================
Constructor with parameters
==================

contract C {
  constructor(uint _a, string memory _b) {}
}

---

(source_file
  definition: (contract
    name: (identifier)
    constructor: (constructor
      parameters: (parameter_list
        parameter: (parameter
          type: (user_defined_type
            name: (symbol
              name: (identifier)))
          name: (identifier))
        parameter: (parameter
          type: (string_type)
          location: (data_location)
          name: (identifier)))
      body: (block))))

==================
Payable constructor
==================

contract C {
  constructor() payable {}
}

---

(source_file
  definition: (contract
    name: (identifier)
    constructor: (constructor
      mutability: (state_mutability)
      body: (block))))

==================
Internal constructor (for abstract contracts)
==================

abstract contract C {
  constructor() internal {}
}

---

(source_file
  definition: (contract
    abstract: (abstract)
    name: (identifier)
    constructor: (constructor
      visibility: (visibility)
      body: (block))))

==================
Constructor with mixed attributes
==================

abstract contract C {
  constructor(uint _x) internal payable {
    // ...
  }
}

---

(source_file
  definition: (contract
    abstract: (abstract)
    name: (identifier)
    constructor: (constructor
      parameters: (parameter_list
        parameter: (parameter
          type: (user_defined_type
            name: (symbol
              name: (identifier)))
          name: (identifier)))
      visibility: (visibility)
      mutability: (state_mutability)
      body: (block
        (comment)))))

==================
Constructor with single parent constructor invocation
==================

contract MyToken is ERC20 {
    constructor(string memory name, string memory symbol) ERC20(name, symbol) {}
}

---

(source_file
  definition: (contract
    name: (identifier)
    parents: (parent_list
      parent: (parent
        name: (identifier)))
    constructor: (constructor
      parameters: (parameter_list
        parameter: (parameter
          type: (string_type)
          location: (data_location)
          name: (identifier))
        parameter: (parameter
          type: (string_type)
          location: (data_location)
          name: (identifier)))
      parent_constructor: (parent_constructor
        name: (symbol
          name: (identifier))
        arguments: (argument_list
          argument: (primary_expression
            (identifier))
          argument: (primary_expression
            (identifier))))
      body: (block))))

==================
Constructor with multiple parent constructor invocations
==================

contract A {}
contract B {}
contract C is A, B {
    constructor() A() B() {}
}

---

(source_file
  definition: (contract
    name: (identifier))
  definition: (contract
    name: (identifier))
  definition: (contract
    name: (identifier)
    parents: (parent_list
      parent: (parent
        name: (identifier))
      parent: (parent
        name: (identifier)))
    constructor: (constructor
      parent_constructor: (parent_constructor
        name: (symbol
          name: (identifier))
        arguments: (argument_list))
      parent_constructor: (parent_constructor
        name: (symbol
          name: (identifier))
        arguments: (argument_list))
      body: (block))))

==================
Constructor with all attributes and parent invocation
==================

abstract contract D is A, B {
    constructor(uint x) internal payable A() B() {
        // body
    }
}

---

(source_file
  definition: (contract
    abstract: (abstract)
    name: (identifier)
    parents: (parent_list
      parent: (parent
        name: (identifier))
      parent: (parent
        name: (identifier)))
    constructor: (constructor
      parameters: (parameter_list
        parameter: (parameter
          type: (user_defined_type
            name: (symbol
              name: (identifier)))
          name: (identifier)))
      visibility: (visibility)
      mutability: (state_mutability)
      parent_constructor: (parent_constructor
        name: (symbol
          name: (identifier))
        arguments: (argument_list))
      parent_constructor: (parent_constructor
        name: (symbol
          name: (identifier))
        arguments: (argument_list))
      body: (block
        (comment)))))
