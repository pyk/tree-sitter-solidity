==================
Simple state variable
==================

contract C {
  uint256 myVar;
}
---

(source_file
  (contract_definition
    name: (identifier)
    body: (contract_body
      (state_variable_declaration
        type: (type_name
          (elementary_type_name))
        name: (identifier)))))

==================
State variable with attributes and initializer
==================

contract C {
  string public constant GREETING = "Hello";
}
---

(source_file
  (contract_definition
    name: (identifier)
    body: (contract_body
      (state_variable_declaration
        type: (type_name
          (elementary_type_name))
        (visibility)
        (mutability)
        name: (identifier)
        value: (primary_expression
          (literal
            (string_literal)))))))

==================
State variable with custom type
==================

contract C {
  MyStruct myStruct;
}
---

(source_file
  (contract_definition
    name: (identifier)
    body: (contract_body
      (state_variable_declaration
        type: (type_name
          (identifier_path
            (identifier)))
        name: (identifier)))))

==================
State variable with boolean literal
==================

contract C {
  bool public active = true;
}
---

(source_file
  (contract_definition
    name: (identifier)
    body: (contract_body
      (state_variable_declaration
        type: (type_name
          (elementary_type_name))
        (visibility)
        name: (identifier)
        value: (primary_expression
          (literal
            (boolean_literal)))))))

==================
State variable with address literal
==================

contract C {
  address public owner = 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2;
}
---

(source_file
  (contract_definition
    name: (identifier)
    body: (contract_body
      (state_variable_declaration
        type: (type_name
          (elementary_type_name))
        (visibility)
        name: (identifier)
        value: (primary_expression
          (literal
            (hex_literal)))))))
