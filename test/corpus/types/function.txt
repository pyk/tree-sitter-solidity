==================
Simple function type with no parameters or returns
==================

contract C {
    function() internal myVar;
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (variable
      type: (function_type
        visibility: (internal))
      name: (symbol
        name: (identifier)))))

==================
Function type with parameters
==================

contract C {
    function (uint, address) internal myFunc;
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (variable
      type: (function_type
        parameters: (parameters
          parameter: (parameter
            type: (primitive_type
              (uint_type)))
          parameter: (parameter
            type: (primitive_type
              (address_type))))
        visibility: (internal))
      name: (symbol
        name: (identifier)))))

==================
Function type with return values
==================

contract C {
    function () internal returns (bool) myFunc;
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (variable
      type: (function_type
        visibility: (internal)
        returns: (parameters
          parameter: (parameter
            type: (primitive_type
              (bool_type)))))
      name: (symbol
        name: (identifier)))))

==================
External function type with all attributes
==================

contract C {
    function (string memory) external view returns (bytes memory) myFunc;
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (variable
      type: (function_type
        parameters: (parameters
          parameter: (parameter
            type: (primitive_type
              (string_type))
            location: (memory)))
        visibility: (external)
        mutability: (view)
        returns: (parameters
          parameter: (parameter
            type: (primitive_type
              (bytes_type))
            location: (memory))))
      name: (symbol
        name: (identifier)))))

==================
Payable function type
==================

contract C {
    function(address) external payable myPayableFunc;
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (variable
      type: (function_type
        parameters: (parameters
          parameter: (parameter
            type: (primitive_type
              (address_type))))
        visibility: (external)
        mutability: (payable))
      name: (symbol
        name: (identifier)))))

==================
Pure function type
==================

contract C {
    function () internal pure returns (uint) myPureFunc;
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (variable
      type: (function_type
        visibility: (internal)
        mutability: (pure)
        returns: (parameters
          parameter: (parameter
            type: (primitive_type
              (uint_type)))))
      name: (symbol
        name: (identifier)))))

==================
Function type with complex parameters (array)
==================

contract C {
    function(uint[] memory) external myComplexFunc;
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (variable
      type: (function_type
        parameters: (parameters
          parameter: (parameter
            type: (array_type
              base: (primitive_type
                (uint_type)))
            location: (memory)))
        visibility: (external))
      name: (symbol
        name: (identifier)))))

==================
Function type with multiple named return values
==================

contract C {
    function () internal returns (uint a, bool b) myMultiReturnFunc;
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (variable
      type: (function_type
        visibility: (internal)
        returns: (parameters
          parameter: (parameter
            type: (primitive_type
              (uint_type))
            name: (symbol
              name: (identifier)))
          parameter: (parameter
            type: (primitive_type
              (bool_type))
            name: (symbol
              name: (identifier)))))
      name: (symbol
        name: (identifier)))))

==================
Function type as a function parameter
==================

contract C {
    function doSomething(function(uint) internal pure returns (uint) callback) public {}
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (function
      name: (symbol
        name: (identifier))
      parameters: (parameters
        parameter: (parameter
          type: (function_type
            parameters: (parameters
              parameter: (parameter
                type: (primitive_type
                  (uint_type))))
            visibility: (internal)
            mutability: (pure)
            returns: (parameters
              parameter: (parameter
                type: (primitive_type
                  (uint_type)))))
          name: (symbol
            name: (identifier))))
      visibility: (public)
      body: (block))))

==================
Function type with no data location on parameter
==================

contract C {
    function(uint) internal myFunc;
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (variable
      type: (function_type
        parameters: (parameters
          parameter: (parameter
            type: (primitive_type
              (uint_type))))
        visibility: (internal))
      name: (symbol
        name: (identifier)))))
