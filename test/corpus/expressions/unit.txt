==================
Ether unit: wei
==================

uint value = 1 wei;

---

(source_file
  definition: (variable
    type: (primitive_type
      (uint_type))
    name: (symbol
      name: (identifier))
    value: (ether_literal
      value: (number)
      unit: (wei))))

==================
Ether unit: gwei
==================

uint value = 10 gwei;

---

(source_file
  definition: (variable
    type: (primitive_type
      (uint_type))
    name: (symbol
      name: (identifier))
    value: (ether_literal
      value: (number)
      unit: (gwei))))

==================
Ether unit: ether with decimal
==================

uint value = 0.5 ether;

---

(source_file
  definition: (variable
    type: (primitive_type
      (uint_type))
    name: (symbol
      name: (identifier))
    value: (ether_literal
      value: (number)
      unit: (ether))))

==================
Time unit: seconds
==================

uint duration = 30 seconds;

---

(source_file
  definition: (variable
    type: (primitive_type
      (uint_type))
    name: (symbol
      name: (identifier))
    value: (time_literal
      value: (number)
      unit: (seconds))))

==================
Time unit: minutes
==================

uint duration = 5 minutes;

---

(source_file
  definition: (variable
    type: (primitive_type
      (uint_type))
    name: (symbol
      name: (identifier))
    value: (time_literal
      value: (number)
      unit: (minutes))))

==================
Time unit: hours
==================

uint duration = 2 hours;

---

(source_file
  definition: (variable
    type: (primitive_type
      (uint_type))
    name: (symbol
      name: (identifier))
    value: (time_literal
      value: (number)
      unit: (hours))))

==================
Time unit: days
==================

uint duration = 7 days;

---

(source_file
  definition: (variable
    type: (primitive_type
      (uint_type))
    name: (symbol
      name: (identifier))
    value: (time_literal
      value: (number)
      unit: (days))))

==================
Time unit: weeks
==================

uint duration = 4 weeks;

---

(source_file
  definition: (variable
    type: (primitive_type
      (uint_type))
    name: (symbol
      name: (identifier))
    value: (time_literal
      value: (number)
      unit: (weeks))))

==================
Units in arithmetic expressions
==================

uint total = 1 ether + 500 gwei;

---

(source_file
  definition: (variable
    type: (primitive_type
      (uint_type))
    name: (symbol
      name: (identifier))
    value: (arithmetic
      (add
        left: (ether_literal
          value: (number)
          unit: (ether))
        operator: (add_op)
        right: (ether_literal
          value: (number)
          unit: (gwei))))))

==================
Units in comparison expressions
==================

contract C {
    function f() public view {
        if (block.timestamp + 5 minutes > someTime) {}
    }
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (function
      name: (symbol
        name: (identifier))
      visibility: (public)
      mutability: (view)
      body: (block
        (if_statement
          condition: (comparison
            left: (arithmetic
              (add
                left: (symbol
                  scope: (symbol
                    name: (identifier))
                  name: (identifier))
                operator: (add_op)
                right: (time_literal
                  value: (number)
                  unit: (minutes))))
            operator: (comparison_op)
            right: (symbol
              name: (identifier)))
          consequence: (block))))))

==================
Units in a require statement
==================

contract C {
    function f() public payable {
        require(msg.value >= 1 ether, "Insufficient payment");
    }
}

---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (function
      name: (symbol
        name: (identifier))
      visibility: (public)
      mutability: (payable)
      body: (block
        (expression_statement
          (call
            function: (builtin_function
              name: (require))
            arguments: (arguments
              argument: (comparison
                left: (symbol
                  scope: (symbol
                    name: (identifier))
                  name: (identifier))
                operator: (comparison_op)
                right: (ether_literal
                  value: (number)
                  unit: (ether)))
              argument: (literal
                (string)))))))))

==================
Units in a function call argument
==================

contract C {
    function setDelay(uint _delay) public {}
    function f() public {
        setDelay(10 minutes);
    }
}
---

(source_file
  definition: (contract
    name: (symbol
      name: (identifier))
    definition: (function
      name: (symbol
        name: (identifier))
      parameters: (parameters
        parameter: (parameter
          type: (primitive_type
            (uint_type))
          name: (symbol
            name: (identifier))))
      visibility: (public)
      body: (block))
    definition: (function
      name: (symbol
        name: (identifier))
      visibility: (public)
      body: (block
        (expression_statement
          (call
            function: (symbol
              name: (identifier))
            arguments: (arguments
              argument: (time_literal
                value: (number)
                unit: (minutes)))))))))
