==================
Simple multiplication with number literals
==================

uint constant x = 10 * 20;

---

(source_file
  definition: (constant_variable
    type: (uint_type)
    name: (symbol
      name: (identifier))
    value: (mul
      left: (literal
        (number))
      operator: (mul_op)
      right: (literal
        (number)))))

==================
Chained multiplication and division (left-associative)
==================

// Should parse as ((a * b) / c)
uint constant x = a * b / c;

---

(source_file
  (comment)
  definition: (constant_variable
    type: (uint_type)
    name: (symbol
      name: (identifier))
    value: (div
      left: (mul
        left: (symbol
          name: (identifier))
        operator: (mul_op)
        right: (symbol
          name: (identifier)))
      operator: (div_op)
      right: (symbol
        name: (identifier)))))

==================
Multiplication precedence with exponentiation
==================

// Should parse as a * (b ** c)
uint constant x = a * b ** c;

---

(source_file
  (comment)
  definition: (constant_variable
    type: (uint_type)
    name: (symbol
      name: (identifier))
    value: (mul
      left: (symbol
        name: (identifier))
      operator: (mul_op)
      right: (exp
        left: (symbol
          name: (identifier))
        operator: (exp_op)
        right: (symbol
          name: (identifier))))))

==================
Multiplication precedence with addition
==================

// Should parse as (a * b) + c
uint constant x = a * b + c;

---

(source_file
  (comment)
  definition: (constant_variable
    type: (uint_type)
    name: (symbol
      name: (identifier))
    value: (add
      left: (mul
        left: (symbol
          name: (identifier))
        operator: (mul_op)
        right: (symbol
          name: (identifier)))
      operator: (add_op)
      right: (symbol
        name: (identifier)))))

==================
Multiplication with a parenthesized expression
==================

// Should parse as (a + b) * c
uint constant x = (a + b) * c;

---

(source_file
  (comment)
  definition: (constant_variable
    type: (uint_type)
    name: (symbol
      name: (identifier))
    value: (mul
      left: (group
        expression: (add
          left: (symbol
            name: (identifier))
          operator: (add_op)
          right: (symbol
            name: (identifier))))
      operator: (mul_op)
      right: (symbol
        name: (identifier)))))
